@model BusinessLogic.DTOs.CreditDto
@{
    ViewBag.Title = "InstallmentsPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="~/Scripts/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="~/Scripts/dataTables.bootstrap4.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script type="text/javascript" src="~/Scripts/moment.min.js"></script>
<link rel="stylesheet" href="~/Content/dataTables.bootstrap4.min.css" />

<div class="row mx-0 justify-content-center visibility3">
    <div class="col mt-5 py-4 jumbotron">
        <h2 class="text-center">Information about your credit</h2>
        <hr />
        <p>
            You have taken out a credit for total amount <strong>@Model.CreditAmount PLN</strong>
            with the percentage rate equal to <strong>@Model.PercentageRate %</strong>.
            Payment is spread out on <strong>@Model.InstallmentCount</strong> installments.
        </p>

        <table id="creditInstallments" class="table table-striped table-bordered w-100 text-center">
            <thead>
                <tr>
                    <th>Amount</th>
                    <th>Paid on</th>
                    <th>Payment deadline</th>
                    <th>Actions</th>
                </tr>
            </thead>
        </table>


    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            $("#creditInstallments").DataTable({
                ajax: {
                    url: "/api/credits/installments/" + @Model.Id,
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "installmentAmount",
                        render: function (data) {
                            return data + " PLN";
                        }
                    },
                    {
                        data: "paidOn",
                        render: function (data) {
                            if (data == null)
                                return "This installment hasn't been paid yet"
                            else {
                                return moment(data).format("Do MMMM YYYY");
                            }

                        }
                    },
                    {
                        data: "paymentDeadline",
                        render: function (data) {
                            return moment(data).format("Do MMMM YYYY");
                        }
                    },
                    {
                        data: "id"
                    }
                ],
                rowCallback: function (row, data) {
                    if (data.paidOn == null)
                        $(row).children().eq(3).html("<button type = 'button' class = 'btn btn-primary btn-block' id='payInstallment' data-installment-id = " + data.id + ">Pay</button>");
                    else
                        $(row).children().eq(3).html("No actions available");
                },
                ordering: false,
                searching: false
            });

            var callAjaxForInstallmentPaying = function (installmentDto) {
                $.ajax({
                    url: "/api/credits/payinstallment",
                    data: installmentDto,
                    method: "POST",
                    success: function (d) {
                        swal({
                            title: "Good job!",
                            text: d,
                            icon: "success"
                        }).then(function () {
                            $.ajax({
                                url: "/api/credits/isfullypaid/" + @Model.Id,
                                method: "GET",
                                success: function (d) {
                                    swal({
                                        title: "Congratulations",
                                        text: d,
                                        icon: "success"
                                    });
                                },
                                error: function () { }
                            });
                        });
                        var table = $("#creditInstallments").DataTable();
                        table.ajax.reload();
                    },
                    error: function (d) {
                        swal({
                            title: "Error",
                            text: d.responseJSON.message,
                            icon: "error"
                        });
                    }
                });
            };

            $("#creditInstallments").on("click", "#payInstallment", function () {
                var button = $(this);

                var deadlineString = $(this).parent().prev().html();
                var deadline = moment(deadlineString, "Do MMMM YYYY");
                var now = moment();
                var days = moment.duration(deadline.diff(now)).days();

                var installmentDto = {
                    id: button.attr("data-installment-id"),
                    creditId: "@Model.Id"
                };

                if (days < 0) {
                    days = Math.abs(days);

                    $.ajax({
                        url: "/api/credits/getpenalty",
                        data: installmentDto,
                        method: "GET",
                        success: function (data) {
                            swal({
                                title: "Warning",
                                icon: "warning",
                                text: "Because you are " + days + " day(s) late, you have to pay " + data.penaltyPercentage + "% extra as a penalty - " + data.amount + " PLN in total.",
                                buttons: true,
                                dangerMode: true
                            }).then(function (clicked) {
                                if (clicked) {
                                    callAjaxForInstallmentPaying(installmentDto);
                                }
                            });
                        }
                    });
                }
                else {
                    callAjaxForInstallmentPaying(installmentDto);
                }
            });
        });
    </script>
}